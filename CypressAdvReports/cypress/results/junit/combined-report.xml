<?xml version="1.0"?>
<testsuites failures="0" errors="0" tests="124" skipped="0">
  <testsuite name="Root Suite" timestamp="2023-02-11T00:24:02" tests="0" file="cypress\e2e\2-advanced-examples\aliasing.cy.js" time="0.000" failures="0"/>
  <testsuite name="Aliasing" timestamp="2023-02-11T00:24:02" tests="2" time="4.063" failures="0">
    <testcase name="Aliasing .as() - alias a DOM element for later use" time="0.772" classname=".as() - alias a DOM element for later use"/>
    <testcase name="Aliasing .as() - alias a route for later use" time="1.085" classname=".as() - alias a route for later use"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:25:18" tests="0" file="cypress\e2e\2-advanced-examples\network_requests.cy.js" time="0.000" failures="0"/>
  <testsuite name="Network Requests" timestamp="2023-02-11T00:25:18" tests="6" time="6.954" failures="0">
    <testcase name="Network Requests cy.request() - make an XHR request" time="0.938" classname="cy.request() - make an XHR request"/>
    <testcase name="Network Requests cy.request() - verify response using BDD syntax" time="0.597" classname="cy.request() - verify response using BDD syntax"/>
    <testcase name="Network Requests cy.request() with query parameters" time="0.410" classname="cy.request() with query parameters"/>
    <testcase name="Network Requests cy.request() - pass result to the second request" time="0.624" classname="cy.request() - pass result to the second request"/>
    <testcase name="Network Requests cy.request() - save response in the shared test context" time="0.636" classname="cy.request() - save response in the shared test context"/>
    <testcase name="Network Requests cy.intercept() - route responses to matching requests" time="1.757" classname="cy.intercept() - route responses to matching requests"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:23:26" tests="0" file="cypress\e2e\1-getting-started\todo.cy.js" time="0.000" failures="0"/>
  <testsuite name="example to-do app" timestamp="2023-02-11T00:23:26" tests="3" time="0.000" failures="0">
    <testcase name="example to-do app displays two todo items by default" time="0.900" classname="displays two todo items by default"/>
    <testcase name="example to-do app can add new todo items" time="0.585" classname="can add new todo items"/>
    <testcase name="example to-do app can check off an item as completed" time="0.355" classname="can check off an item as completed"/>
  </testsuite>
  <testsuite name="with a checked task" timestamp="2023-02-11T00:23:30" tests="3" time="1.370" failures="0">
    <testcase name="example to-do app with a checked task can filter for uncompleted tasks" time="0.438" classname="can filter for uncompleted tasks"/>
    <testcase name="example to-do app with a checked task can filter for completed tasks" time="0.447" classname="can filter for completed tasks"/>
    <testcase name="example to-do app with a checked task can delete all completed tasks" time="0.457" classname="can delete all completed tasks"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:25:38" tests="0" file="cypress\e2e\2-advanced-examples\spies_stubs_clocks.cy.js" time="0.000" failures="0"/>
  <testsuite name="Spies, Stubs, and Clock" timestamp="2023-02-11T00:25:38" tests="7" time="5.732" failures="0">
    <testcase name="Spies, Stubs, and Clock cy.spy() - wrap a method in a spy" time="0.508" classname="cy.spy() - wrap a method in a spy"/>
    <testcase name="Spies, Stubs, and Clock cy.spy() retries until assertions pass" time="2.540" classname="cy.spy() retries until assertions pass"/>
    <testcase name="Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub" time="0.217" classname="cy.stub() - create a stub and/or replace a function with stub"/>
    <testcase name="Spies, Stubs, and Clock cy.clock() - control time in the browser" time="0.386" classname="cy.clock() - control time in the browser"/>
    <testcase name="Spies, Stubs, and Clock cy.tick() - move time in the browser" time="0.447" classname="cy.tick() - move time in the browser"/>
    <testcase name="Spies, Stubs, and Clock cy.stub() matches depending on arguments" time="0.057" classname="cy.stub() matches depending on arguments"/>
    <testcase name="Spies, Stubs, and Clock matches call arguments using Sinon matchers" time="0.063" classname="matches call arguments using Sinon matchers"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:24:20" tests="0" file="cypress\e2e\2-advanced-examples\connectors.cy.js" time="0.000" failures="0"/>
  <testsuite name="Connectors" timestamp="2023-02-11T00:24:20" tests="4" time="0.000" failures="0">
    <testcase name="Connectors .each() - iterate over an array of elements" time="0.552" classname=".each() - iterate over an array of elements"/>
    <testcase name="Connectors .its() - get properties on the current subject" time="0.240" classname=".its() - get properties on the current subject"/>
    <testcase name="Connectors .invoke() - invoke a function on the current subject" time="0.242" classname=".invoke() - invoke a function on the current subject"/>
    <testcase name="Connectors .spread() - spread an array as individual args to callback function" time="0.243" classname=".spread() - spread an array as individual args to callback function"/>
  </testsuite>
  <testsuite name=".then()" timestamp="2023-02-11T00:24:24" tests="4" time="0.930" failures="0">
    <testcase name="Connectors .then() invokes a callback function with the current subject" time="0.238" classname="invokes a callback function with the current subject"/>
    <testcase name="Connectors .then() yields the returned value to the next command" time="0.230" classname="yields the returned value to the next command"/>
    <testcase name="Connectors .then() yields the original subject without return" time="0.222" classname="yields the original subject without return"/>
    <testcase name="Connectors .then() yields the value yielded by the last Cypress command inside" time="0.222" classname="yields the value yielded by the last Cypress command inside"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:25:29" tests="0" file="cypress\e2e\2-advanced-examples\querying.cy.js" time="0.000" failures="0"/>
  <testsuite name="Querying" timestamp="2023-02-11T00:25:29" tests="5" time="4.971" failures="0">
    <testcase name="Querying cy.get() - query DOM elements" time="0.764" classname="cy.get() - query DOM elements"/>
    <testcase name="Querying cy.contains() - query DOM elements with matching content" time="0.375" classname="cy.contains() - query DOM elements with matching content"/>
    <testcase name="Querying .within() - query DOM elements within a specific element" time="0.269" classname=".within() - query DOM elements within a specific element"/>
    <testcase name="Querying cy.root() - query the root DOM element" time="0.246" classname="cy.root() - query the root DOM element"/>
    <testcase name="Querying best practices - selecting elements" time="0.915" classname="best practices - selecting elements"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:25:10" tests="0" file="cypress\e2e\2-advanced-examples\navigation.cy.js" time="0.000" failures="0"/>
  <testsuite name="Navigation" timestamp="2023-02-11T00:25:10" tests="3" time="4.412" failures="0">
    <testcase name="Navigation cy.go() - go back or forward in the browser's history" time="1.500" classname="cy.go() - go back or forward in the browser's history"/>
    <testcase name="Navigation cy.reload() - reload the page" time="0.803" classname="cy.reload() - reload the page"/>
    <testcase name="Navigation cy.visit() - visit a remote url" time="0.733" classname="cy.visit() - visit a remote url"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:25:01" tests="0" file="cypress\e2e\2-advanced-examples\misc.cy.js" time="0.000" failures="0"/>
  <testsuite name="Misc" timestamp="2023-02-11T00:25:01" tests="4" time="0.000" failures="0">
    <testcase name="Misc .end() - end the command chain" time="0.733" classname=".end() - end the command chain"/>
    <testcase name="Misc cy.exec() - execute a system command" time="0.390" classname="cy.exec() - execute a system command"/>
    <testcase name="Misc cy.focused() - get the DOM element that has focus" time="0.402" classname="cy.focused() - get the DOM element that has focus"/>
    <testcase name="Misc cy.wrap() - wrap an object" time="0.199" classname="cy.wrap() - wrap an object"/>
  </testsuite>
  <testsuite name="Cypress.Screenshot" timestamp="2023-02-11T00:25:05" tests="2" time="1.642" failures="0">
    <testcase name="Misc Cypress.Screenshot cy.screenshot() - take a screenshot" time="1.395" classname="cy.screenshot() - take a screenshot"/>
    <testcase name="Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots" time="0.208" classname="Cypress.Screenshot.defaults() - change default config of screenshots"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:24:29" tests="0" file="cypress\e2e\2-advanced-examples\cookies.cy.js" time="0.000" failures="0"/>
  <testsuite name="Cookies" timestamp="2023-02-11T00:24:29" tests="7" time="4.721" failures="0">
    <testcase name="Cookies cy.getCookie() - get a browser cookie" time="0.753" classname="cy.getCookie() - get a browser cookie"/>
    <testcase name="Cookies cy.getCookies() - get browser cookies for the current domain" time="0.434" classname="cy.getCookies() - get browser cookies for the current domain"/>
    <testcase name="Cookies cy.getAllCookies() - get all browser cookies" time="0.285" classname="cy.getAllCookies() - get all browser cookies"/>
    <testcase name="Cookies cy.setCookie() - set a browser cookie" time="0.257" classname="cy.setCookie() - set a browser cookie"/>
    <testcase name="Cookies cy.clearCookie() - clear a browser cookie" time="0.346" classname="cy.clearCookie() - clear a browser cookie"/>
    <testcase name="Cookies cy.clearCookies() - clear browser cookies for the current domain" time="0.335" classname="cy.clearCookies() - clear browser cookies for the current domain"/>
    <testcase name="Cookies cy.clearAllCookies() - clear all browser cookies" time="0.265" classname="cy.clearAllCookies() - clear all browser cookies"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:26:40" tests="0" file="cypress\e2e\2-advanced-examples\window.cy.js" time="0.000" failures="0"/>
  <testsuite name="Window" timestamp="2023-02-11T00:26:40" tests="3" time="3.452" failures="0">
    <testcase name="Window cy.window() - get the global window object" time="0.552" classname="cy.window() - get the global window object"/>
    <testcase name="Window cy.document() - get the document object" time="0.252" classname="cy.document() - get the document object"/>
    <testcase name="Window cy.title() - get the title" time="0.238" classname="cy.title() - get the title"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:23:36" tests="0" file="cypress\e2e\2-advanced-examples\actions.cy.js" time="0.000" failures="0"/>
  <testsuite name="Actions" timestamp="2023-02-11T00:23:36" tests="14" time="20.183" failures="0">
    <testcase name="Actions .type() - type into a DOM element" time="4.639" classname=".type() - type into a DOM element"/>
    <testcase name="Actions .focus() - focus on a DOM element" time="0.305" classname=".focus() - focus on a DOM element"/>
    <testcase name="Actions .blur() - blur off a DOM element" time="0.629" classname=".blur() - blur off a DOM element"/>
    <testcase name="Actions .clear() - clears an input or textarea element" time="0.769" classname=".clear() - clears an input or textarea element"/>
    <testcase name="Actions .submit() - submit a form" time="0.608" classname=".submit() - submit a form"/>
    <testcase name="Actions .click() - click on a DOM element" time="3.162" classname=".click() - click on a DOM element"/>
    <testcase name="Actions .dblclick() - double click on a DOM element" time="0.406" classname=".dblclick() - double click on a DOM element"/>
    <testcase name="Actions .rightclick() - right click on a DOM element" time="0.406" classname=".rightclick() - right click on a DOM element"/>
    <testcase name="Actions .check() - check a checkbox or radio element" time="1.354" classname=".check() - check a checkbox or radio element"/>
    <testcase name="Actions .uncheck() - uncheck a checkbox element" time="1.431" classname=".uncheck() - uncheck a checkbox element"/>
    <testcase name="Actions .select() - select an option in a &lt;select&gt; element" time="1.285" classname=".select() - select an option in a &lt;select&gt; element"/>
    <testcase name="Actions .scrollIntoView() - scroll an element into view" time="0.392" classname=".scrollIntoView() - scroll an element into view"/>
    <testcase name="Actions .trigger() - trigger an event on a DOM element" time="0.430" classname=".trigger() - trigger an event on a DOM element"/>
    <testcase name="Actions cy.scrollTo() - scroll the window or element to a position" time="2.285" classname="cy.scrollTo() - scroll the window or element to a position"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:25:48" tests="0" file="cypress\e2e\2-advanced-examples\storage.cy.js" time="0.000" failures="0"/>
  <testsuite name="Local Storage / Session Storage" timestamp="2023-02-11T00:25:48" tests="5" time="4.084" failures="0">
    <testcase name="Local Storage / Session Storage cy.clearLocalStorage() - clear all data in localStorage for the current origin" time="0.882" classname="cy.clearLocalStorage() - clear all data in localStorage for the current origin"/>
    <testcase name="Local Storage / Session Storage cy.getAllLocalStorage() - get all data in localStorage for all origins" time="0.296" classname="cy.getAllLocalStorage() - get all data in localStorage for all origins"/>
    <testcase name="Local Storage / Session Storage cy.clearAllLocalStorage() - clear all data in localStorage for all origins" time="0.295" classname="cy.clearAllLocalStorage() - clear all data in localStorage for all origins"/>
    <testcase name="Local Storage / Session Storage cy.getAllSessionStorage() - get all data in sessionStorage for all origins" time="0.305" classname="cy.getAllSessionStorage() - get all data in sessionStorage for all origins"/>
    <testcase name="Local Storage / Session Storage cy.clearAllSessionStorage() - clear all data in sessionStorage for all origins" time="0.291" classname="cy.clearAllSessionStorage() - clear all data in sessionStorage for all origins"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:24:38" tests="0" file="cypress\e2e\2-advanced-examples\cypress_api.cy.js" time="0.000" failures="0"/>
  <testsuite name="Cypress.Commands" timestamp="2023-02-11T00:24:38" tests="1" time="2.474" failures="0">
    <testcase name="Cypress.Commands .add() - create a custom command" time="0.547" classname=".add() - create a custom command"/>
  </testsuite>
  <testsuite name="Cypress.Cookies" timestamp="2023-02-11T00:24:40" tests="1" time="0.298" failures="0">
    <testcase name="Cypress.Cookies .debug() - enable or disable debugging" time="0.292" classname=".debug() - enable or disable debugging"/>
  </testsuite>
  <testsuite name="Cypress.arch" timestamp="2023-02-11T00:24:40" tests="1" time="0.247" failures="0">
    <testcase name="Cypress.arch Get CPU architecture name of underlying OS" time="0.229" classname="Get CPU architecture name of underlying OS"/>
  </testsuite>
  <testsuite name="Cypress.config()" timestamp="2023-02-11T00:24:41" tests="1" time="0.294" failures="0">
    <testcase name="Cypress.config() Get and set configuration options" time="0.277" classname="Get and set configuration options"/>
  </testsuite>
  <testsuite name="Cypress.dom" timestamp="2023-02-11T00:24:41" tests="1" time="0.236" failures="0">
    <testcase name="Cypress.dom .isHidden() - determine if a DOM element is hidden" time="0.232" classname=".isHidden() - determine if a DOM element is hidden"/>
  </testsuite>
  <testsuite name="Cypress.env()" timestamp="2023-02-11T00:24:41" tests="1" time="0.250" failures="0">
    <testcase name="Cypress.env() Get environment variables" time="0.225" classname="Get environment variables"/>
  </testsuite>
  <testsuite name="Cypress.log" timestamp="2023-02-11T00:24:41" tests="1" time="0.222" failures="0">
    <testcase name="Cypress.log Control what is printed to the Command Log" time="0.223" classname="Control what is printed to the Command Log"/>
  </testsuite>
  <testsuite name="Cypress.platform" timestamp="2023-02-11T00:24:42" tests="1" time="0.230" failures="0">
    <testcase name="Cypress.platform Get underlying OS name" time="0.218" classname="Get underlying OS name"/>
  </testsuite>
  <testsuite name="Cypress.version" timestamp="2023-02-11T00:24:42" tests="1" time="0.242" failures="0">
    <testcase name="Cypress.version Get current version of Cypress being run" time="0.236" classname="Get current version of Cypress being run"/>
  </testsuite>
  <testsuite name="Cypress.spec" timestamp="2023-02-11T00:24:42" tests="1" time="0.246" failures="0">
    <testcase name="Cypress.spec Get current spec information" time="0.229" classname="Get current spec information"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:26:07" tests="0" file="cypress\e2e\2-advanced-examples\utilities.cy.js" time="0.000" failures="0"/>
  <testsuite name="Utilities" timestamp="2023-02-11T00:26:07" tests="5" time="5.246" failures="0">
    <testcase name="Utilities Cypress._ - call a lodash method" time="0.786" classname="Cypress._ - call a lodash method"/>
    <testcase name="Utilities Cypress.$ - call a jQuery method" time="0.366" classname="Cypress.$ - call a jQuery method"/>
    <testcase name="Utilities Cypress.Blob - blob utilities and base64 string conversion" time="0.675" classname="Cypress.Blob - blob utilities and base64 string conversion"/>
    <testcase name="Utilities Cypress.minimatch - test out glob patterns against strings" time="0.211" classname="Cypress.minimatch - test out glob patterns against strings"/>
    <testcase name="Utilities Cypress.Promise - instantiate a bluebird promise" time="1.215" classname="Cypress.Promise - instantiate a bluebird promise"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:24:54" tests="0" file="cypress\e2e\2-advanced-examples\location.cy.js" time="0.000" failures="0"/>
  <testsuite name="Location" timestamp="2023-02-11T00:24:54" tests="3" time="2.941" failures="0">
    <testcase name="Location cy.hash() - get the current URL hash" time="0.538" classname="cy.hash() - get the current URL hash"/>
    <testcase name="Location cy.location() - get window.location" time="0.236" classname="cy.location() - get window.location"/>
    <testcase name="Location cy.url() - get the current URL" time="0.228" classname="cy.url() - get the current URL"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:26:17" tests="0" file="cypress\e2e\2-advanced-examples\viewport.cy.js" time="0.000" failures="0"/>
  <testsuite name="Viewport" timestamp="2023-02-11T00:26:17" tests="1" time="5.705" failures="0">
    <testcase name="Viewport cy.viewport() - set the viewport size and dimension" time="3.409" classname="cy.viewport() - set the viewport size and dimension"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:24:10" tests="0" file="cypress\e2e\2-advanced-examples\assertions.cy.js" time="0.000" failures="0"/>
  <testsuite name="Assertions" timestamp="2023-02-11T00:24:10" tests="0" time="0.000" failures="0"/>
  <testsuite name="Implicit Assertions" timestamp="2023-02-11T00:24:10" tests="2" time="2.983" failures="0">
    <testcase name="Assertions Implicit Assertions .should() - make an assertion about the current subject" time="0.774" classname=".should() - make an assertion about the current subject"/>
    <testcase name="Assertions Implicit Assertions .and() - chain multiple assertions together" time="0.342" classname=".and() - chain multiple assertions together"/>
  </testsuite>
  <testsuite name="Explicit Assertions" timestamp="2023-02-11T00:24:13" tests="7" time="3.288" failures="0">
    <testcase name="Assertions Explicit Assertions expect - make an assertion about a specified subject" time="0.274" classname="expect - make an assertion about a specified subject"/>
    <testcase name="Assertions Explicit Assertions pass your own callback function to should()" time="0.278" classname="pass your own callback function to should()"/>
    <testcase name="Assertions Explicit Assertions finds element by class name regex" time="0.262" classname="finds element by class name regex"/>
    <testcase name="Assertions Explicit Assertions can throw any error" time="0.248" classname="can throw any error"/>
    <testcase name="Assertions Explicit Assertions matches unknown text between two elements" time="0.252" classname="matches unknown text between two elements"/>
    <testcase name="Assertions Explicit Assertions assert - assert shape of an object" time="0.226" classname="assert - assert shape of an object"/>
    <testcase name="Assertions Explicit Assertions retries the should callback until assertions pass" time="1.689" classname="retries the should callback until assertions pass"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:24:47" tests="0" file="cypress\e2e\2-advanced-examples\files.cy.js" time="0.000" failures="0"/>
  <testsuite name="Files" timestamp="2023-02-11T00:24:47" tests="4" time="3.432" failures="0">
    <testcase name="Files cy.fixture() - load a fixture" time="0.684" classname="cy.fixture() - load a fixture"/>
    <testcase name="Files cy.fixture() or require - load a fixture" time="0.197" classname="cy.fixture() or require - load a fixture"/>
    <testcase name="Files cy.readFile() - read file contents" time="0.209" classname="cy.readFile() - read file contents"/>
    <testcase name="Files cy.writeFile() - write to a file" time="0.449" classname="cy.writeFile() - write to a file"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:25:56" tests="0" file="cypress\e2e\2-advanced-examples\traversal.cy.js" time="0.000" failures="0"/>
  <testsuite name="Traversal" timestamp="2023-02-11T00:25:56" tests="18" time="7.461" failures="0">
    <testcase name="Traversal .children() - get child DOM elements" time="0.643" classname=".children() - get child DOM elements"/>
    <testcase name="Traversal .closest() - get closest ancestor DOM element" time="0.251" classname=".closest() - get closest ancestor DOM element"/>
    <testcase name="Traversal .eq() - get a DOM element at a specific index" time="0.257" classname=".eq() - get a DOM element at a specific index"/>
    <testcase name="Traversal .filter() - get DOM elements that match the selector" time="0.254" classname=".filter() - get DOM elements that match the selector"/>
    <testcase name="Traversal .find() - get descendant DOM elements of the selector" time="0.302" classname=".find() - get descendant DOM elements of the selector"/>
    <testcase name="Traversal .first() - get first DOM element" time="0.256" classname=".first() - get first DOM element"/>
    <testcase name="Traversal .last() - get last DOM element" time="0.236" classname=".last() - get last DOM element"/>
    <testcase name="Traversal .next() - get next sibling DOM element" time="0.259" classname=".next() - get next sibling DOM element"/>
    <testcase name="Traversal .nextAll() - get all next sibling DOM elements" time="0.261" classname=".nextAll() - get all next sibling DOM elements"/>
    <testcase name="Traversal .nextUntil() - get next sibling DOM elements until next el" time="0.251" classname=".nextUntil() - get next sibling DOM elements until next el"/>
    <testcase name="Traversal .not() - remove DOM elements from set of DOM elements" time="0.251" classname=".not() - remove DOM elements from set of DOM elements"/>
    <testcase name="Traversal .parent() - get parent DOM element from DOM elements" time="0.318" classname=".parent() - get parent DOM element from DOM elements"/>
    <testcase name="Traversal .parents() - get parent DOM elements from DOM elements" time="0.294" classname=".parents() - get parent DOM elements from DOM elements"/>
    <testcase name="Traversal .parentsUntil() - get parent DOM elements from DOM elements until el" time="0.262" classname=".parentsUntil() - get parent DOM elements from DOM elements until el"/>
    <testcase name="Traversal .prev() - get previous sibling DOM element" time="0.259" classname=".prev() - get previous sibling DOM element"/>
    <testcase name="Traversal .prevAll() - get all previous sibling DOM elements" time="0.284" classname=".prevAll() - get all previous sibling DOM elements"/>
    <testcase name="Traversal .prevUntil() - get all previous sibling DOM elements until el" time="0.271" classname=".prevUntil() - get all previous sibling DOM elements until el"/>
    <testcase name="Traversal .siblings() - get all sibling DOM elements" time="0.269" classname=".siblings() - get all sibling DOM elements"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2023-02-11T00:26:27" tests="0" file="cypress\e2e\2-advanced-examples\waiting.cy.js" time="0.000" failures="0"/>
  <testsuite name="Waiting" timestamp="2023-02-11T00:26:27" tests="2" time="8.410" failures="0">
    <testcase name="Waiting cy.wait() - wait for a specific amount of time" time="5.165" classname="cy.wait() - wait for a specific amount of time"/>
    <testcase name="Waiting cy.wait() - wait for a specific route" time="0.901" classname="cy.wait() - wait for a specific route"/>
  </testsuite>
</testsuites>